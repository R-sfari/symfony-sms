<script>
  $(function() {
    altair_charts_echarts.init(),
    altair_charts_echarts.line()
  }),
  altair_charts_echarts = {
    init: function() {
      var $elem = $("[data-echarts-table],.data-echarts-table");
      if ($elem.length) {
        $elem.each(function() {
          var $this = this,
            this_title = $($this).data('title'),
            data_order = $($this).data('order'),
            data_purchase = $($this).data('purchase'),
            dataAxis = $($this).data('legend');
          var $myChart = echarts.init($this);
          option = {
            legend: {
              orient: 'horizontal',
              y: 'top',
              x: 'center',
              data: ["{{ 'store.statistics.orderUser'|trans }}", "{{ 'store.statistics.purchase'|trans }}"]
            },
            color: [
              '#7cb342', '#3398DB'
            ],
            tooltip: {
              trigger: 'axis',
              axisPointer: { // 坐标轴指示器，坐标轴触发有效
                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
              },
              extraCssText: 'box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);',
              formatter: "{a0}: {c0} {{ 'store.unit.price'|trans }}<br />{a1}: {c1} {{ 'store.unit.price'|trans }}"
            },
            toolbox: {
              show: true,
              feature: {
                saveAsImage: {
                  title: ' ',
                  show: true
                }
              }
            },
            grid: {
              bottom: '10%',
              containLabel: true
            },
            dataZoom: [
              {
                type: 'inside'
              }, {
                start: 0,
                end: 10,
                handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
                handleSize: '80%',
                handleStyle: {
                  color: '#fff',
                  shadowBlur: 3,
                  shadowColor: 'rgba(0, 0, 0, 0.6)',
                  shadowOffsetX: 2,
                  shadowOffsetY: 2
                }
              }
            ],
            xAxis: [
              {
                type: 'category',
                data: dataAxis
              }
            ],
            yAxis: [
              {
                type: 'value'
              }
            ],
            series: [
              {
                name: "{{ 'store.statistics.orderUser'|trans }}",
                type: 'bar',
                smooth: true,
                symbol: 'none',
                sampling: 'average',
                data: data_order
              }, {
                name: "{{ 'store.statistics.purchase'|trans }}",
                type: 'bar',
                symbol: 'none',
                sampling: 'average',
                smooth: true,
                data: data_purchase
              }
            ]
          };
          $myChart.setOption(option);

          // Enable data zoom when user click bar.
          var zoomSize = 2;
          $myChart.on('click', function(params) {
            $myChart.dispatchAction({
              type: 'dataZoom',
              startValue: dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)],
              endValue: dataAxis[Math.min(params.dataIndex + zoomSize / 2, dataAxis.length - 1)]
            });
          });
          $window.on("debouncedresize", function() {
            $myChart.resize()
          });
        });
      }
    },
    line: function() {
      var $elem = $("[data-echarts-line],.data-echarts-line");
      if ($elem.length) {
        $elem.each(function() {
          var $this = this,
            this_title = $($this).data('title'),
            data_order = $($this).data('order'),
            data_purchase = $($this).data('purchase'),
            dataAxis = $($this).data('legend');
          var $myChart = echarts.init($this);
          option = {
            tooltip: {
              trigger: 'axis',
              position: function(pt) {
                return [pt[0], '10%'];
              },
              formatter: "{a0}: {c0} {{ 'store.unit.price'|trans }}<br />{a1}: {c1} {{ 'store.unit.price'|trans }}"
            },
            legend: {
              orient: 'horizontal',
              y: 'top',
              x: 'center',
              data: ["{{ 'store.statistics.orderUser'|trans }}", "{{ 'store.statistics.purchase'|trans }}"]
            },
            toolbox: {
              show: true,
              feature: {
                saveAsImage: {
                  title: ' ',
                  show: true
                }
              }
            },
            grid: {
              bottom: '10%',
              containLabel: true
            },
            xAxis: {
              type: 'category',
              boundaryGap: false,
              data: dataAxis
            },
            yAxis: {
              type: 'value',
              boundaryGap: [0, '100%']
            },
            dataZoom: [
              {
                type: 'inside'
              }, {
                start: 0,
                end: 10,
                handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
                handleSize: '80%',
                handleStyle: {
                  color: '#fff',
                  shadowBlur: 3,
                  shadowColor: 'rgba(0, 0, 0, 0.6)',
                  shadowOffsetX: 2,
                  shadowOffsetY: 2
                }
              }
            ],
            series: [
              {
                name: "{{ 'store.statistics.orderUser'|trans }}",
                type: 'line',
                smooth: true,
                symbol: 'none',
                sampling: 'average',
                itemStyle: {
                  normal: {
                    color: '#7cb342'
                  }
                },
                data: data_order
              }, {
                name: "{{ 'store.statistics.purchase'|trans }}",
                type: 'line',
                smooth: true,
                symbol: 'none',
                sampling: 'average',
                itemStyle: {
                  normal: {
                    color: '#3398DB'
                  }
                },
                data: data_purchase
              }
            ]
          };

          $myChart.setOption(option);
          $window.on("debouncedresize", function() {
            $myChart.resize()
          });
        });
      }
    }
  };
</script>
